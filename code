-----------Band Repo---------
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.example.oneToManyBidirectional.Model.Band;
@Repository
public interface BandRepo extends JpaRepository<Band, Long>{
	
	
-----MusicialRepo-----
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.example.oneToManyBidirectional.Model.Musician;
@Repository
public interface MusicianRepo extends JpaRepository<Musician, Long>{
	

--BandController----------
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.oneToManyBidirectional.Model.Band;
import com.example.oneToManyBidirectional.repo.BandRepo;

@RestController
@RequestMapping("/band")
public class BandController {

	@Autowired
	BandRepo br;

	@GetMapping("/read")
	public List<Band> read() {
		return br.findAll();
	}

	@GetMapping("/readOne/{id}")
	public Optional<Band> readOne(@PathVariable long id) {
		return br.findById(id);
	}

		@GetMapping("/readByName/{name}")
		public List<Band> readByName(@PathVariable String  name) {
			return br.findByName(name);
		}

	@PostMapping("/add")
	public Band add(@RequestBody Band e) {
		return br.save(e);
	}

	@PutMapping("/update/{id}")
	public void update(@PathVariable long id, @RequestBody Band e) {
		Optional<Band> band = br.findById(id);// 101

		br.save(band.get());

	}

	@DeleteMapping("/delete/{id}")
	public void delete(@PathVariable long id) {
		Optional<Band> emp = br.findById(id);// 101
		br.delete(emp.get());
	}

}



----Musician Controller-----
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.oneToManyBidirectional.Model.Band;
import com.example.oneToManyBidirectional.Model.Musician;
import com.example.oneToManyBidirectional.repo.BandRepo;
import com.example.oneToManyBidirectional.repo.MusicianRepo;

@RestController
@RequestMapping("/musician")
public class MusicianController {

	@Autowired
	MusicianRepo mr;

	@GetMapping("/read")
	public List<Musician> read() {
		return mr.findAll();
	}

	@GetMapping("/readOne/{id}")
	public Optional<Musician> readOne(@PathVariable long id) {
		return mr.findById(id);
	}

		@GetMapping("/readByName/{name}")
		public List<Musician> readByName(@PathVariable String  name) {
			return mr.findByName(name);
		}

	@PostMapping("/add")
	public Musician add(@RequestBody Musician e) {
		return mr.save(e);
	}

	@PutMapping("/update/{id}")
	public void update(@PathVariable long id, @RequestBody Musician e) {
		Optional<Musician> band = mr.findById(id);// 101

		mr.save(band.get());

	}

	@DeleteMapping("/delete/{id}")
	public void delete(@PathVariable long id) {
		Optional<Musician> emp = mr.findById(id);// 101
		mr.delete(emp.get());
	}

}

